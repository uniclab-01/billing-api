{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Unicboard billing api is available on PyPI:","text":""},{"location":"#requires","title":"Requires:","text":"<p>Python &gt;=3.6</p>"},{"location":"#install","title":"Install:","text":"<p>python -m pip unicboard_billing_api</p>"},{"location":"#usage","title":"Usage:","text":"<pre><code>from unicboard_billing_sdk import BillingApiSdk\n\nApi = BillingApiSdk(\n    api_billing_url=\"unicboard url\",\n    api_token=\"yours token\",\n) \n</code></pre>"},{"location":"#get-list-devices","title":"Get list devices","text":"<pre><code>devices = Api.get_device_list_info() # default limit = 1000\n\ndevices = Api.get_device_list_info(limit: int, offset: int) #  for custom limit/offset\n\nlist_device_id = [device.id for device in devices] \nlist_device_mac = [device.data_gateway_network_device.mac for device in devices]\n</code></pre>"},{"location":"#get-device-by-device_id","title":"Get device by device_id","text":"<pre><code>device = Api.get_device_info(UUID(device_id))\n</code></pre>"},{"location":"#get-device-by-device_id_1","title":"Get device by device_id","text":"<pre><code>devices_values = Api.get_device_value(\n    devices_id=list_device_id,\n    period_from: datetime,\n    period_to: Optional[datetime],  # default now\n)\n</code></pre>"},{"location":"DataGatewayNetworkResponseModel/","title":"DataGatewayNetworkResponseModel","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Gateway</p> <p>Parameters:</p> Name Type Description Default <code>network</code> <p>NetworkResponseModel</p> required <code>protocol</code> <p>ProtokolResponseModel</p> required <code>mac</code> <code>int</code> <p>unique identifier of the device in the network</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class DataGatewayNetworkResponseModel(NamedTuple):\n    \"\"\"\n    Gateway\n\n    Parameters:\n        network: [NetworkResponseModel](NetworkResponseModel.md)\n        protocol: [ProtokolResponseModel](ProtokolResponseModel.md)\n        mac (int): unique identifier of the device in the network\n    \"\"\"\n    network: NetworkResponseModel\n    protocol: ProtokolResponseModel\n    mac: int\n</code></pre>"},{"location":"DataGatewayResponseModel/","title":"DataGatewayResponseModel","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Gateway</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>name of input system</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class DataGatewayResponseModel(NamedTuple):\n    \"\"\"\n    Gateway\n\n    Parameters:\n        name (str): name of input system\n    \"\"\"\n    name: str\n</code></pre>"},{"location":"DeviceChannelResponseModel/","title":"DeviceChannelResponseModel","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device channel information</p> <p>Parameters:</p> Name Type Description Default <code>inactivity_limit</code> <code>int</code> <p>idle time to create a non-arrival data event (second)</p> required <code>last_date_event_no_data</code> <code>datetime</code> <p>last date of non-arrival event</p> required <code>serial_number</code> <code>int</code> <p>channel serial number (1,2,3,4,5)</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class DeviceChannelResponseModel(NamedTuple):\n    \"\"\"\n    Device channel information\n\n    Parameters:\n        inactivity_limit (int): idle time to create a non-arrival data event (second)\n        last_date_event_no_data (datetime): last date of non-arrival event\n        serial_number (int): channel serial number (1,2,3,4,5)\n    \"\"\"\n    inactivity_limit: int\n    last_date_event_no_data: Optional[datetime]\n    serial_number: int\n    device_meters: List[DeviceMeterResponseModel]\n</code></pre>"},{"location":"DeviceManufacturerResponseModel/","title":"DeviceManufacturerResponseModel","text":"<p>             Bases: <code>NamedTuple</code></p> <p>The manufacturer's name</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>manufacturer's name</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class DeviceManufacturerResponseModel(NamedTuple):\n    \"\"\"\n    The manufacturer's name\n\n    Parameters:\n        name (str): manufacturer's name\n    \"\"\"\n    name: str\n</code></pre>"},{"location":"DeviceMeterResponseModel/","title":"DeviceMeterResponseModel","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device meter information</p> <p>Parameters:</p> Name Type Description Default <code>last_value</code> <code>float</code> <p>last counter value (cubic meter(m3))</p> required <code>last_value_date</code> <code>datetime</code> <p>date of last receipt of readings (datetime)</p> required <code>unit_multiplier</code> <code>float</code> <p>recalculates measurements (between database and user)</p> required <code>value_multiplier</code> <code>float</code> <p>recalculates measurements (between meter and database)</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class DeviceMeterResponseModel(NamedTuple):\n    \"\"\"\n    Device meter information\n\n    Parameters:\n        last_value (float): last counter value (cubic meter(m3))\n        last_value_date (datetime): date of last receipt of readings (datetime)\n        unit_multiplier (float): recalculates measurements (between database and user)\n        value_multiplier (float): recalculates measurements (between meter and database)\n    \"\"\"\n    last_value: Optional[float]\n    last_value_date: Optional[datetime]\n    unit_multiplier: float\n    value_multiplier: float\n</code></pre>"},{"location":"DeviceMeteringType/","title":"DeviceMeteringType","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Type of measuring system (gas, water)</p> <p>Parameters:</p> Name Type Description Default <code>name_ru</code> <code>str</code> <p>name of the measuring system in Russian/English (for the user)</p> required <code>name_en</code> <code>str</code> <p>name of the measuring system in Russian/English (for the user)</p> required <code>sys_name</code> <code>str</code> <p>name of the measuring system in the system (code)</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class DeviceMeteringType(NamedTuple):\n    \"\"\"\n    Type of measuring system (gas, water)\n\n    Parameters:\n        name_ru (str): name of the measuring system in Russian/English (for the user)\n        name_en (str): name of the measuring system in Russian/English (for the user)\n        sys_name (str): name of the measuring system in the system (code)\n    \"\"\"\n    name_en: str\n    name_ru: str\n    sys_name: str\n</code></pre>"},{"location":"DeviceModificationResponseModel/","title":"DeviceModificationResponseModel","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device modification</p> <p>Parameters:</p> Name Type Description Default <code>device_modification_type</code> <p>DeviceModificationTypeResponseModel</p> required <code>name</code> <code>str</code> <p>device modification's name</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class DeviceModificationResponseModel(NamedTuple):\n    \"\"\"\n    Device modification\n\n    Parameters:\n        device_modification_type: [DeviceModificationTypeResponseModel](DeviceModificationTypeResponseModel.md)\n        name (str): device modification's name\n    \"\"\"\n    device_modification_type: DeviceModificationTypeResponseModel\n    name: str\n</code></pre>"},{"location":"DeviceModificationTypeResponseModel/","title":"DeviceModificationTypeResponseModel","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device model</p> <p>Parameters:</p> Name Type Description Default <code>device_metering_type</code> <p>DeviceMeteringType</p> required <code>name_ru_en</code> <code>str</code> <p>name of the device model in Russian/English (for the user)</p> required <code>sys_name</code> <code>str</code> <p>name of the device model in the system (code)</p> required <code>type</code> <code>str</code> <p>smart_meter/modem</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class DeviceModificationTypeResponseModel(NamedTuple):\n    \"\"\"\n    Device model\n\n    Parameters:\n        device_metering_type: [DeviceMeteringType](DeviceMeteringType.md)\n        name_ru_en (str): name of the device model in Russian/English (for the user)\n        sys_name (str): name of the device model in the system (code)\n        type (str): smart_meter/modem\n    \"\"\"\n    device_metering_type: DeviceMeteringType\n    name_en: str\n    name_ru: str\n    sys_name: str\n    type: str\n</code></pre>"},{"location":"GetDeviceChannelValuePayloadResponse/","title":"GetDeviceChannelValuePayloadResponse","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device channel values</p> <p>Parameters:</p> Name Type Description Default <code>channel_number</code> <code>int</code> <p>channel number</p> required <code>date</code> <code>datetime</code> <p>date and time of receipt</p> required <code>date_created</code> <code>datetime</code> <p>date and time the entry was created</p> required <code>device_id</code> <code>UUID</code> <p>unique device identifier in the system</p> required <code>value</code> <code>float</code> <p>product of value_raw and value_multiplier (recalculated values)</p> required <code>value_raw</code> <code>float</code> <p>initial value</p> required <code>value_type</code> <code>str</code> <p>device_data(meter reading), interpolated_linear(interpolated reading)</p> required <code>meter_id</code> <code>str</code> <p>meter identifier</p> required <code>last</code> <code>value Optional(float</code> <p>last value</p> required <code>last_value_date</code> <code>Optional(datetime</code> <p>last value date</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class GetDeviceChannelValuePayloadResponse(NamedTuple):\n    \"\"\"\n    Device channel values\n\n    Parameters:\n        channel_number (int): channel number\n        date (datetime): date and time of receipt\n        date_created (datetime): date and time the entry was created\n        device_id (UUID): unique device identifier in the system\n        value (float): product of value_raw and value_multiplier (recalculated values)\n        value_raw (float): initial value\n        value_type (str): device_data(meter reading), interpolated_linear(interpolated reading)\n        meter_id (str): meter identifier\n        last value Optional(float): last value\n        last_value_date Optional(datetime): last value date\n    \"\"\"\n    channel_number: int\n    date: datetime\n    date_created: datetime\n    device_id: UUID\n    value: Optional[float]\n    value_raw: Optional[float]\n    value_type: str\n    kind: str\n    tariff_number: int\n    journal_data_type: Dict[str, Any]\n    meter_id: UUID\n    last_value: Optional[float]\n    last_value_date: Optional[datetime]\n</code></pre>"},{"location":"GetDeviceInfoResponse/","title":"GetDeviceInfoResponse","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device information list</p> <p>Parameters:</p> Name Type Description Default <code>errors</code> <code>any</code> <p>presence of errors</p> required <code>ok</code> <code>bool</code> <p>successful request</p> required <code>payload</code> <p>GetDeviceListInfoPayloadResponse</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class GetDeviceInfoResponse(NamedTuple):\n    \"\"\"\n    Device information list\n\n    Parameters:\n        errors (any): presence of errors\n        ok (bool): successful request\n        payload: [GetDeviceListInfoPayloadResponse](GetDeviceListInfoPayloadResponse.md)\n    \"\"\"\n    errors: List[Any]\n    ok: bool\n    payload: GetDeviceListInfoPayloadResponse\n</code></pre>"},{"location":"GetDeviceListInfoPayloadResponse/","title":"GetDeviceListInfoPayloadResponse","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device information</p> <p>Parameters:</p> Name Type Description Default <code>data_gateway_network_device</code> <p>DataGatewayNetworkResponseModel</p> required <code>device_channel</code> <code>list</code> <p>DeviceChannelResponseModel</p> required <code>device_manufacturer</code> <p>DeviceManufacturerResponseModel</p> required <code>device_modification</code> <p>DeviceModificationResponseModel</p> required <code>date_produced</code> <code>datetime</code> <p>date of manufacture of the device</p> required <code>firmware_version</code> <code>str</code> <p>software version</p> required <code>hardware_version</code> <code>str</code> <p>hardware version</p> required <code>id</code> <code>UUID</code> <p>system identifier</p> required <code>manufacturer_serial_number</code> <code>str</code> <p>manufacturer-serial number</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class GetDeviceListInfoPayloadResponse(NamedTuple):\n    \"\"\"\n    Device information\n\n    Parameters:\n        data_gateway_network_device: [DataGatewayNetworkResponseModel](DataGatewayNetworkResponseModel.md)\n        device_channel (list): [DeviceChannelResponseModel](DeviceChannelResponseModel.md)\n        device_manufacturer: [DeviceManufacturerResponseModel](DeviceManufacturerResponseModel.md)\n        device_modification: [DeviceModificationResponseModel](DeviceModificationResponseModel.md)\n        date_produced (datetime): date of manufacture of the device\n        firmware_version (str): software version\n        hardware_version (str): hardware version\n        id (UUID): system identifier\n        manufacturer_serial_number (str): manufacturer-serial number\n    \"\"\"\n    data_gateway_network_device: DataGatewayNetworkResponseModel\n    device_channel: List[DeviceChannelResponseModel]\n    device_manufacturer: DeviceManufacturerResponseModel\n    device_modification: DeviceModificationResponseModel\n    date_produced: Optional[datetime]\n    firmware_version: Optional[str]\n    hardware_version: Optional[str]\n    id: UUID\n    manufacturer_serial_number: str\n</code></pre>"},{"location":"GetDeviceListInfoResponse/","title":"GetDeviceListInfoResponse","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device information list</p> <p>Parameters:</p> Name Type Description Default <code>count</code> <code>int</code> <p>object's limit count</p> required <code>errors</code> <code>any</code> <p>presence of errors</p> required <code>ok</code> <code>bool</code> <p>validity</p> required <code>total_count</code> <code>int</code> <p>object's total count</p> required <code>payload</code> <code>list</code> <p>GetDeviceListInfoPayloadResponse</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class GetDeviceListInfoResponse(NamedTuple):\n    \"\"\"\n    Device information list\n\n    Parameters:\n        count (int): object's limit count\n        errors (any): presence of errors\n        ok (bool): validity\n        total_count (int): object's total count\n        payload (list): [GetDeviceListInfoPayloadResponse](GetDeviceListInfoPayloadResponse.md)\n    \"\"\"\n    count: int\n    errors: List[Any]\n    ok: bool\n    total_count: int\n    payload: List[GetDeviceListInfoPayloadResponse]\n</code></pre>"},{"location":"GetDeviceValueResponse/","title":"GetDeviceValueResponse","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device channel information list</p> <p>Parameters:</p> Name Type Description Default <code>count</code> <code>int</code> <p>object's limit count</p> required <code>errors</code> <code>any</code> <p>presence of errors</p> required <code>ok</code> <code>bool</code> <p>validity</p> required <code>total_count</code> <code>int</code> <p>object's total count</p> required <code>payload</code> <code>list</code> <p>GetDeviceChannelValuePayloadResponse</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class GetDeviceValueResponse(NamedTuple):\n    \"\"\"\n    Device channel information list\n\n   Parameters:\n        count (int): object's limit count\n        errors (any): presence of errors\n        ok (bool): validity\n        total_count (int): object's total count\n        payload (list): [GetDeviceChannelValuePayloadResponse](GetDeviceChannelValuePayloadResponse.md)\n    \"\"\"\n    count: int\n    errors: List[Any]\n    ok: bool\n    total_count: int\n    payload: List[GetDeviceChannelValuePayloadResponse]\n</code></pre>"},{"location":"NetworkResponseModel/","title":"NetworkResponseModel","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Internal network</p> <p>Parameters:</p> Name Type Description Default <code>data_gateway</code> <p>DataGatewayResponseModel</p> required <code>name</code> <code>str</code> <p>network's name</p> required <code>type_network</code> <code>str</code> <p>type of network, can be output or input</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class NetworkResponseModel(NamedTuple):\n    \"\"\"\n    Internal network\n\n    Parameters:\n        data_gateway: [DataGatewayResponseModel](DataGatewayResponseModel.md)\n        name (str): network's name\n        type_network (str): type of network, can be output or input\n    \"\"\"\n    data_gateway: DataGatewayResponseModel\n    name: str\n    type_network: str\n</code></pre>"},{"location":"ProtokolResponseModel/","title":"ProtokolResponseModel","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Protocol's name</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>protocol's name</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class ProtokolResponseModel(NamedTuple):\n    \"\"\"\n    Protocol's name\n\n    Parameters:\n        name (str): protocol's name\n    \"\"\"\n    name: str\n</code></pre>"},{"location":"billing_api_sdk/","title":"Billing api sdk","text":"Source code in <code>unicboard_billing_sdk/billing_api_sdk.py</code> <pre><code>class BillingApiSdk:\n\n    def __init__(self, api_billing_url: str, api_token: str) -&gt; None:\n        \"\"\"\n        This function initializes the class with the billing API URL and the API token.\n\n        Args:\n          api_billing_url (str): The URL of the API Billing endpoint.\n          api_token (str): The API token you received from the billing system.\n        \"\"\"\n        self._api_billing_url = api_billing_url\n        self._api_token = api_token\n\n    def get_device_list_info(\n        self,\n        resource_type: Optional[ResourceTypeEnum],\n        limit: Optional[int] = None,\n        offset: Optional[int] = None,\n        filters: Optional[List[Dict[str, Any]]] = None,\n        sorts: Optional[List[Tuple[str, str]]] = None,\n    ) -&gt; GetDeviceListInfoResponse:\n        \"\"\"\n        It makes a GET request to the `/api/v1/devices/info` endpoint, and returns the response as a\n        `GetDeviceListInfoResponse` object\n        Args:\n         resource_type (Optional[str]): filter by resource type - use ResourceTypeEnum for choose value\n         limit (Optional[int]): The maximum number of devices to return.\n         offset (Optional[int]): The offset of the first device to return.\n         filters (Optional[List[Dict[str, Any]]]): A list of dictionaries, each of which contains a key and a value.\n         The key is the name of the field to filter on, and the value is the value to filter on.\n         sorts (Optional[List[Tuple[str, str]]]): A list of tuples, where each tuple is a field name and a sort direction.\n\n        Returns:\n            A list of devices.\n\n        [GetDeviceListInfoResponse](GetDeviceListInfoResponse.md)\n        \"\"\"\n\n        auth_header = {'Authorization': f'Bearer {self._api_token}'}\n        query_params: Dict[str, Any] = {\n            \"resource_type\": resource_type.value if resource_type is not None else None,\n            \"filter\": filters,\n            \"sort\": sorts,\n        }\n        if limit is not None:\n            query_params['limit'] = limit\n        if offset is not None:\n            query_params['offset'] = offset\n\n        response = requests.get(\n            f'{self._api_billing_url}/'\n            f'api/v1/devices/info',\n            params=query_params,\n            headers=auth_header,\n        )\n        response.raise_for_status()\n        return get_device_list_info_structure(response.json())\n\n    def get_device_list_by_id_info(self, device_ids: List[UUID]) -&gt; GetDeviceListInfoResponse:\n        \"\"\"\n        It takes a list of device IDs and returns a list of device info objects\n\n        Args:\n          device_ids (List[UUID]): List[UUID]\n\n        Returns:\n          A list of devices.\n        [GetDeviceListInfoResponse](GetDeviceListInfoResponse.md)\n        \"\"\"\n        auth_header = {'Authorization': f'Bearer {self._api_token}'}\n\n        device_ids_str = [str(device_id) for device_id in device_ids]\n        response = requests.post(\n            f'{self._api_billing_url}/'\n            f'api/v1/devices/info',\n            headers=auth_header,\n            json={'device_ids': device_ids_str},\n        )\n        response.raise_for_status()\n        return get_device_list_info_structure(response.json())\n\n    def get_device_info(self, device_id: UUID) -&gt; GetDeviceInfoResponse:\n        \"\"\"\n        &gt; This function takes a device ID and returns a `GetDeviceInfoResponse` object\n\n        Args:\n          device_id (UUID): The UUID of the device you want to get information about.\n\n        Returns:\n          A GetDeviceInfoResponse object. Status of payload information in device list)\n        [GetDeviceInfoResponse](GetDeviceInfoResponse.md)\n        \"\"\"\n        auth_header = {'Authorization': f'Bearer {self._api_token}'}\n\n        response = requests.get(\n            f'{self._api_billing_url}/'\n            f'api/v1/devices/{str(device_id)}/info',\n            headers=auth_header,\n        )\n        response.raise_for_status()\n        return get_device_info_structure(response.json())\n\n    def get_device_value(\n            self,\n            devices_id: List[UUID],\n            period_from: datetime,\n            iteration_interval: IntervalSelectValue = IntervalSelectValue.day,\n            period_to: datetime = None,\n            end_of_day: bool = True,\n    ) -&gt; GetDeviceValueResponse:\n        \"\"\"\n        It gets the value of a device\n\n        Args:\n          devices_id (List[UUID]): List[UUID] - list of device IDs\n          period_from (datetime): The start of the period for which you want to get the data.\n          period_to (datetime): datetime = None\n          iteration_interval (IntervalSelectValue): = IntervalSelectValue.day  iteration interval\n          end_of_day (bool): = True Show values of the end of day\n\n        Returns:\n          GetDeviceValueResponse: response about device value\n        [GetDeviceValueResponse](GetDeviceValueResponse.md)\n        \"\"\"\n        auth_header = {'Authorization': f'Bearer {self._api_token}'}\n        query_params: Dict[str, Any] = {\n            \"period_from\": period_from,\n            \"period_to\": period_to,\n            \"end_of_day\": end_of_day,\n            \"iteration_interval\": iteration_interval.value,\n        }\n        devices_id = [str(device_id) for device_id in devices_id]\n\n        response = requests.post(\n            f'{self._api_billing_url}/'\n            f'api/v1/devices/values',\n            params=query_params,\n            headers=auth_header,\n            json={\"devices_id\": devices_id},\n        )\n        response.raise_for_status()\n        return get_device_value_structure(response.json())\n\n    def get_device_battery_level(\n        self,\n        device_id: UUID,\n        limit: Optional[int] = None,\n        offset: Optional[int] = None,\n    ) -&gt; GetDeviceBatteryLevelResponse:\n        \"\"\"\n        It gets the battery level value of device\n\n        Args:\n          device_id (UUID): The UUID of the device you want to get information about.\n          limit (Optional[int]): The maximum number of devices battery level value to return.\n          offset (Optional[int]): The offset of the first device battery level value to return.\n\n        Returns:\n          GetDeviceBatteryLevelResponse: response about device battery level value\n        [GetDeviceBatteryLevelResponse](GetDeviceBatteryLevelResponse.md)\n        \"\"\"\n        auth_header = {'Authorization': f'Bearer {self._api_token}'}\n        query_params: Dict[str, Any] = {}\n\n        if limit is not None:\n            query_params['limit'] = limit\n        if offset is not None:\n            query_params['offset'] = offset\n\n        response = requests.get(\n            f'{self._api_billing_url}/'\n            f'api/v1/devices/{str(device_id)}/battery-level',\n            params=query_params,\n            headers=auth_header,\n        )\n        response.raise_for_status()\n        return get_device_battery_level_structure(response.json())\n\n    def get_device_clock(\n        self,\n        device_id: UUID,\n        limit: Optional[int] = None,\n        offset: Optional[int] = None,\n    ) -&gt; GetDeviceClockResponse:\n        \"\"\"\n        It gets the clock data of device\n\n        Args:\n          device_id (UUID): The UUID of the device you want to get information about.\n          limit (Optional[int]): The maximum number of devices clock data value to return.\n          offset (Optional[int]): The offset of the first device clock data value to return.\n\n        Returns:\n          GetDeviceClockResponse: response about device clock data\n        [GetDeviceClockResponse](GetDeviceClockResponse.md)\n        \"\"\"\n        auth_header = {'Authorization': f'Bearer {self._api_token}'}\n        query_params: Dict[str, Any] = {}\n\n        if limit is not None:\n            query_params['limit'] = limit\n        if offset is not None:\n            query_params['offset'] = offset\n\n        response = requests.get(\n            f'{self._api_billing_url}/'\n            f'api/v1/devices/{str(device_id)}/clocks',\n            params=query_params,\n            headers=auth_header,\n        )\n        response.raise_for_status()\n        return get_device_clock_structure(response.json())\n\n    def get_device_event(\n        self,\n        device_id: UUID,\n        limit: Optional[int] = None,\n        offset: Optional[int] = None,\n    ) -&gt; GetDeviceEventResponse:\n        \"\"\"\n        It gets events of device\n\n        Args:\n          device_id (UUID): The UUID of the device you want to get information about.\n          limit (Optional[int]): The maximum number of devices events value to return.\n          offset (Optional[int]): The offset of the first device events value to return.\n\n        Returns:\n          GetDeviceEventResponse: response about device events\n        [GetDeviceEventResponse](GetDeviceEventResponse.md)\n        \"\"\"\n        auth_header = {'Authorization': f'Bearer {self._api_token}'}\n        query_params: Dict[str, Any] = {}\n\n        if limit is not None:\n            query_params['limit'] = limit\n        if offset is not None:\n            query_params['offset'] = offset\n\n        response = requests.get(\n            f'{self._api_billing_url}/'\n            f'api/v1/devices/{str(device_id)}/events',\n            params=query_params,\n            headers=auth_header,\n        )\n        response.raise_for_status()\n        return get_device_event_structure(response.json())\n\n    def get_device_profile(\n        self,\n        device_id: UUID,\n        limit: Optional[int] = None,\n        offset: Optional[int] = None,\n    ) -&gt; GetDeviceProfileResponse:\n        \"\"\"\n        It gets the time profiles of device\n\n        Args:\n          device_id (UUID): The UUID of the device you want to get information about.\n          limit (Optional[int]): The maximum number of devices time profiles value to return.\n          offset (Optional[int]): The offset of the first device time profiles value to return.\n\n        Returns:\n          GetDeviceProfileResponse: response about device time profiles\n        [GetDeviceProfileResponse](GetDeviceProfileResponse.md)\n        \"\"\"\n        auth_header = {'Authorization': f'Bearer {self._api_token}'}\n        query_params: Dict[str, Any] = {}\n\n        if limit is not None:\n            query_params['limit'] = limit\n        if offset is not None:\n            query_params['offset'] = offset\n\n        response = requests.get(\n            f'{self._api_billing_url}/'\n            f'api/v1/devices/{str(device_id)}/profiles',\n            params=query_params,\n            headers=auth_header,\n        )\n        response.raise_for_status()\n        return get_device_profile_structure(response.json())\n\n    def get_device_temperature(\n        self,\n        device_id: UUID,\n        limit: Optional[int] = None,\n        offset: Optional[int] = None,\n    ) -&gt; GetDeviceTemperatureResponse:\n        \"\"\"\n        It gets the temperature info of device\n\n        Args:\n          device_id (UUID): The UUID of the device you want to get information about.\n          limit (Optional[int]): The maximum number of devices time profiles value to return.\n          offset (Optional[int]): The offset of the first device time profiles value to return.\n\n        Returns:\n          GetDeviceTemperatureResponse: response about device temperature info\n        [GetDeviceTemperatureResponse](GetDeviceTemperatureResponse.md)\n        \"\"\"\n        auth_header = {'Authorization': f'Bearer {self._api_token}'}\n        query_params: Dict[str, Any] = {}\n\n        if limit is not None:\n            query_params['limit'] = limit\n        if offset is not None:\n            query_params['offset'] = offset\n\n        response = requests.get(\n            f'{self._api_billing_url}/'\n            f'api/v1/devices/{str(device_id)}/temperatures',\n            params=query_params,\n            headers=auth_header,\n        )\n        response.raise_for_status()\n        return get_device_temperature_structure(response.json())\n\n    def get_device_uptime(\n        self,\n        device_id: UUID,\n        limit: Optional[int] = None,\n        offset: Optional[int] = None,\n    ) -&gt; GetDeviceUptimeResponse:\n        \"\"\"\n        It gets the temperature info of device\n\n        Args:\n          device_id (UUID): The UUID of the device you want to get information about.\n          limit (Optional[int]): The maximum number of devices time profiles value to return.\n          offset (Optional[int]): The offset of the first device time profiles value to return.\n\n        Returns:\n          GetDeviceTemperatureResponse: response about device temperature info\n        [GetDeviceTemperatureResponse](GetDeviceTemperatureResponse.md)\n        \"\"\"\n        auth_header = {'Authorization': f'Bearer {self._api_token}'}\n        query_params: Dict[str, Any] = {}\n\n        if limit is not None:\n            query_params['limit'] = limit\n        if offset is not None:\n            query_params['offset'] = offset\n\n        response = requests.get(\n            f'{self._api_billing_url}/'\n            f'api/v1/devices/{str(device_id)}/uptimes',\n            params=query_params,\n            headers=auth_header,\n        )\n        response.raise_for_status()\n        return get_device_temperature_structure(response.json())\n</code></pre>"},{"location":"billing_api_sdk/#unicboard_billing_sdk.billing_api_sdk.BillingApiSdk.__init__","title":"<code>__init__(api_billing_url, api_token)</code>","text":"<p>This function initializes the class with the billing API URL and the API token.</p> <p>Parameters:</p> Name Type Description Default <code>api_billing_url</code> <code>str</code> <p>The URL of the API Billing endpoint.</p> required <code>api_token</code> <code>str</code> <p>The API token you received from the billing system.</p> required Source code in <code>unicboard_billing_sdk/billing_api_sdk.py</code> <pre><code>def __init__(self, api_billing_url: str, api_token: str) -&gt; None:\n    \"\"\"\n    This function initializes the class with the billing API URL and the API token.\n\n    Args:\n      api_billing_url (str): The URL of the API Billing endpoint.\n      api_token (str): The API token you received from the billing system.\n    \"\"\"\n    self._api_billing_url = api_billing_url\n    self._api_token = api_token\n</code></pre>"},{"location":"billing_api_sdk/#unicboard_billing_sdk.billing_api_sdk.BillingApiSdk.get_device_battery_level","title":"<code>get_device_battery_level(device_id, limit=None, offset=None)</code>","text":"<p>It gets the battery level value of device</p> <p>Parameters:</p> Name Type Description Default <code>device_id</code> <code>UUID</code> <p>The UUID of the device you want to get information about.</p> required <code>limit</code> <code>Optional[int]</code> <p>The maximum number of devices battery level value to return.</p> <code>None</code> <code>offset</code> <code>Optional[int]</code> <p>The offset of the first device battery level value to return.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>GetDeviceBatteryLevelResponse</code> <code>GetDeviceBatteryLevelResponse</code> <p>response about device battery level value</p> <p>GetDeviceBatteryLevelResponse</p> Source code in <code>unicboard_billing_sdk/billing_api_sdk.py</code> <pre><code>def get_device_battery_level(\n    self,\n    device_id: UUID,\n    limit: Optional[int] = None,\n    offset: Optional[int] = None,\n) -&gt; GetDeviceBatteryLevelResponse:\n    \"\"\"\n    It gets the battery level value of device\n\n    Args:\n      device_id (UUID): The UUID of the device you want to get information about.\n      limit (Optional[int]): The maximum number of devices battery level value to return.\n      offset (Optional[int]): The offset of the first device battery level value to return.\n\n    Returns:\n      GetDeviceBatteryLevelResponse: response about device battery level value\n    [GetDeviceBatteryLevelResponse](GetDeviceBatteryLevelResponse.md)\n    \"\"\"\n    auth_header = {'Authorization': f'Bearer {self._api_token}'}\n    query_params: Dict[str, Any] = {}\n\n    if limit is not None:\n        query_params['limit'] = limit\n    if offset is not None:\n        query_params['offset'] = offset\n\n    response = requests.get(\n        f'{self._api_billing_url}/'\n        f'api/v1/devices/{str(device_id)}/battery-level',\n        params=query_params,\n        headers=auth_header,\n    )\n    response.raise_for_status()\n    return get_device_battery_level_structure(response.json())\n</code></pre>"},{"location":"billing_api_sdk/#unicboard_billing_sdk.billing_api_sdk.BillingApiSdk.get_device_clock","title":"<code>get_device_clock(device_id, limit=None, offset=None)</code>","text":"<p>It gets the clock data of device</p> <p>Parameters:</p> Name Type Description Default <code>device_id</code> <code>UUID</code> <p>The UUID of the device you want to get information about.</p> required <code>limit</code> <code>Optional[int]</code> <p>The maximum number of devices clock data value to return.</p> <code>None</code> <code>offset</code> <code>Optional[int]</code> <p>The offset of the first device clock data value to return.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>GetDeviceClockResponse</code> <code>GetDeviceClockResponse</code> <p>response about device clock data</p> <p>GetDeviceClockResponse</p> Source code in <code>unicboard_billing_sdk/billing_api_sdk.py</code> <pre><code>def get_device_clock(\n    self,\n    device_id: UUID,\n    limit: Optional[int] = None,\n    offset: Optional[int] = None,\n) -&gt; GetDeviceClockResponse:\n    \"\"\"\n    It gets the clock data of device\n\n    Args:\n      device_id (UUID): The UUID of the device you want to get information about.\n      limit (Optional[int]): The maximum number of devices clock data value to return.\n      offset (Optional[int]): The offset of the first device clock data value to return.\n\n    Returns:\n      GetDeviceClockResponse: response about device clock data\n    [GetDeviceClockResponse](GetDeviceClockResponse.md)\n    \"\"\"\n    auth_header = {'Authorization': f'Bearer {self._api_token}'}\n    query_params: Dict[str, Any] = {}\n\n    if limit is not None:\n        query_params['limit'] = limit\n    if offset is not None:\n        query_params['offset'] = offset\n\n    response = requests.get(\n        f'{self._api_billing_url}/'\n        f'api/v1/devices/{str(device_id)}/clocks',\n        params=query_params,\n        headers=auth_header,\n    )\n    response.raise_for_status()\n    return get_device_clock_structure(response.json())\n</code></pre>"},{"location":"billing_api_sdk/#unicboard_billing_sdk.billing_api_sdk.BillingApiSdk.get_device_event","title":"<code>get_device_event(device_id, limit=None, offset=None)</code>","text":"<p>It gets events of device</p> <p>Parameters:</p> Name Type Description Default <code>device_id</code> <code>UUID</code> <p>The UUID of the device you want to get information about.</p> required <code>limit</code> <code>Optional[int]</code> <p>The maximum number of devices events value to return.</p> <code>None</code> <code>offset</code> <code>Optional[int]</code> <p>The offset of the first device events value to return.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>GetDeviceEventResponse</code> <code>GetDeviceEventResponse</code> <p>response about device events</p> <p>GetDeviceEventResponse</p> Source code in <code>unicboard_billing_sdk/billing_api_sdk.py</code> <pre><code>def get_device_event(\n    self,\n    device_id: UUID,\n    limit: Optional[int] = None,\n    offset: Optional[int] = None,\n) -&gt; GetDeviceEventResponse:\n    \"\"\"\n    It gets events of device\n\n    Args:\n      device_id (UUID): The UUID of the device you want to get information about.\n      limit (Optional[int]): The maximum number of devices events value to return.\n      offset (Optional[int]): The offset of the first device events value to return.\n\n    Returns:\n      GetDeviceEventResponse: response about device events\n    [GetDeviceEventResponse](GetDeviceEventResponse.md)\n    \"\"\"\n    auth_header = {'Authorization': f'Bearer {self._api_token}'}\n    query_params: Dict[str, Any] = {}\n\n    if limit is not None:\n        query_params['limit'] = limit\n    if offset is not None:\n        query_params['offset'] = offset\n\n    response = requests.get(\n        f'{self._api_billing_url}/'\n        f'api/v1/devices/{str(device_id)}/events',\n        params=query_params,\n        headers=auth_header,\n    )\n    response.raise_for_status()\n    return get_device_event_structure(response.json())\n</code></pre>"},{"location":"billing_api_sdk/#unicboard_billing_sdk.billing_api_sdk.BillingApiSdk.get_device_info","title":"<code>get_device_info(device_id)</code>","text":"<p>This function takes a device ID and returns a <code>GetDeviceInfoResponse</code> object</p> <p>Parameters:</p> Name Type Description Default <code>device_id</code> <code>UUID</code> <p>The UUID of the device you want to get information about.</p> required <p>Returns:</p> Type Description <code>GetDeviceInfoResponse</code> <p>A GetDeviceInfoResponse object. Status of payload information in device list)</p> <p>GetDeviceInfoResponse</p> Source code in <code>unicboard_billing_sdk/billing_api_sdk.py</code> <pre><code>def get_device_info(self, device_id: UUID) -&gt; GetDeviceInfoResponse:\n    \"\"\"\n    &gt; This function takes a device ID and returns a `GetDeviceInfoResponse` object\n\n    Args:\n      device_id (UUID): The UUID of the device you want to get information about.\n\n    Returns:\n      A GetDeviceInfoResponse object. Status of payload information in device list)\n    [GetDeviceInfoResponse](GetDeviceInfoResponse.md)\n    \"\"\"\n    auth_header = {'Authorization': f'Bearer {self._api_token}'}\n\n    response = requests.get(\n        f'{self._api_billing_url}/'\n        f'api/v1/devices/{str(device_id)}/info',\n        headers=auth_header,\n    )\n    response.raise_for_status()\n    return get_device_info_structure(response.json())\n</code></pre>"},{"location":"billing_api_sdk/#unicboard_billing_sdk.billing_api_sdk.BillingApiSdk.get_device_list_by_id_info","title":"<code>get_device_list_by_id_info(device_ids)</code>","text":"<p>It takes a list of device IDs and returns a list of device info objects</p> <p>Parameters:</p> Name Type Description Default <code>device_ids</code> <code>List[UUID]</code> <p>List[UUID]</p> required <p>Returns:</p> Type Description <code>GetDeviceListInfoResponse</code> <p>A list of devices.</p> <p>GetDeviceListInfoResponse</p> Source code in <code>unicboard_billing_sdk/billing_api_sdk.py</code> <pre><code>def get_device_list_by_id_info(self, device_ids: List[UUID]) -&gt; GetDeviceListInfoResponse:\n    \"\"\"\n    It takes a list of device IDs and returns a list of device info objects\n\n    Args:\n      device_ids (List[UUID]): List[UUID]\n\n    Returns:\n      A list of devices.\n    [GetDeviceListInfoResponse](GetDeviceListInfoResponse.md)\n    \"\"\"\n    auth_header = {'Authorization': f'Bearer {self._api_token}'}\n\n    device_ids_str = [str(device_id) for device_id in device_ids]\n    response = requests.post(\n        f'{self._api_billing_url}/'\n        f'api/v1/devices/info',\n        headers=auth_header,\n        json={'device_ids': device_ids_str},\n    )\n    response.raise_for_status()\n    return get_device_list_info_structure(response.json())\n</code></pre>"},{"location":"billing_api_sdk/#unicboard_billing_sdk.billing_api_sdk.BillingApiSdk.get_device_list_info","title":"<code>get_device_list_info(resource_type, limit=None, offset=None, filters=None, sorts=None)</code>","text":"<p>It makes a GET request to the <code>/api/v1/devices/info</code> endpoint, and returns the response as a <code>GetDeviceListInfoResponse</code> object Args:  resource_type (Optional[str]): filter by resource type - use ResourceTypeEnum for choose value  limit (Optional[int]): The maximum number of devices to return.  offset (Optional[int]): The offset of the first device to return.  filters (Optional[List[Dict[str, Any]]]): A list of dictionaries, each of which contains a key and a value.  The key is the name of the field to filter on, and the value is the value to filter on.  sorts (Optional[List[Tuple[str, str]]]): A list of tuples, where each tuple is a field name and a sort direction.</p> <p>Returns:</p> Type Description <code>GetDeviceListInfoResponse</code> <p>A list of devices.</p> <p>GetDeviceListInfoResponse</p> Source code in <code>unicboard_billing_sdk/billing_api_sdk.py</code> <pre><code>def get_device_list_info(\n    self,\n    resource_type: Optional[ResourceTypeEnum],\n    limit: Optional[int] = None,\n    offset: Optional[int] = None,\n    filters: Optional[List[Dict[str, Any]]] = None,\n    sorts: Optional[List[Tuple[str, str]]] = None,\n) -&gt; GetDeviceListInfoResponse:\n    \"\"\"\n    It makes a GET request to the `/api/v1/devices/info` endpoint, and returns the response as a\n    `GetDeviceListInfoResponse` object\n    Args:\n     resource_type (Optional[str]): filter by resource type - use ResourceTypeEnum for choose value\n     limit (Optional[int]): The maximum number of devices to return.\n     offset (Optional[int]): The offset of the first device to return.\n     filters (Optional[List[Dict[str, Any]]]): A list of dictionaries, each of which contains a key and a value.\n     The key is the name of the field to filter on, and the value is the value to filter on.\n     sorts (Optional[List[Tuple[str, str]]]): A list of tuples, where each tuple is a field name and a sort direction.\n\n    Returns:\n        A list of devices.\n\n    [GetDeviceListInfoResponse](GetDeviceListInfoResponse.md)\n    \"\"\"\n\n    auth_header = {'Authorization': f'Bearer {self._api_token}'}\n    query_params: Dict[str, Any] = {\n        \"resource_type\": resource_type.value if resource_type is not None else None,\n        \"filter\": filters,\n        \"sort\": sorts,\n    }\n    if limit is not None:\n        query_params['limit'] = limit\n    if offset is not None:\n        query_params['offset'] = offset\n\n    response = requests.get(\n        f'{self._api_billing_url}/'\n        f'api/v1/devices/info',\n        params=query_params,\n        headers=auth_header,\n    )\n    response.raise_for_status()\n    return get_device_list_info_structure(response.json())\n</code></pre>"},{"location":"billing_api_sdk/#unicboard_billing_sdk.billing_api_sdk.BillingApiSdk.get_device_profile","title":"<code>get_device_profile(device_id, limit=None, offset=None)</code>","text":"<p>It gets the time profiles of device</p> <p>Parameters:</p> Name Type Description Default <code>device_id</code> <code>UUID</code> <p>The UUID of the device you want to get information about.</p> required <code>limit</code> <code>Optional[int]</code> <p>The maximum number of devices time profiles value to return.</p> <code>None</code> <code>offset</code> <code>Optional[int]</code> <p>The offset of the first device time profiles value to return.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>GetDeviceProfileResponse</code> <code>GetDeviceProfileResponse</code> <p>response about device time profiles</p> <p>GetDeviceProfileResponse</p> Source code in <code>unicboard_billing_sdk/billing_api_sdk.py</code> <pre><code>def get_device_profile(\n    self,\n    device_id: UUID,\n    limit: Optional[int] = None,\n    offset: Optional[int] = None,\n) -&gt; GetDeviceProfileResponse:\n    \"\"\"\n    It gets the time profiles of device\n\n    Args:\n      device_id (UUID): The UUID of the device you want to get information about.\n      limit (Optional[int]): The maximum number of devices time profiles value to return.\n      offset (Optional[int]): The offset of the first device time profiles value to return.\n\n    Returns:\n      GetDeviceProfileResponse: response about device time profiles\n    [GetDeviceProfileResponse](GetDeviceProfileResponse.md)\n    \"\"\"\n    auth_header = {'Authorization': f'Bearer {self._api_token}'}\n    query_params: Dict[str, Any] = {}\n\n    if limit is not None:\n        query_params['limit'] = limit\n    if offset is not None:\n        query_params['offset'] = offset\n\n    response = requests.get(\n        f'{self._api_billing_url}/'\n        f'api/v1/devices/{str(device_id)}/profiles',\n        params=query_params,\n        headers=auth_header,\n    )\n    response.raise_for_status()\n    return get_device_profile_structure(response.json())\n</code></pre>"},{"location":"billing_api_sdk/#unicboard_billing_sdk.billing_api_sdk.BillingApiSdk.get_device_temperature","title":"<code>get_device_temperature(device_id, limit=None, offset=None)</code>","text":"<p>It gets the temperature info of device</p> <p>Parameters:</p> Name Type Description Default <code>device_id</code> <code>UUID</code> <p>The UUID of the device you want to get information about.</p> required <code>limit</code> <code>Optional[int]</code> <p>The maximum number of devices time profiles value to return.</p> <code>None</code> <code>offset</code> <code>Optional[int]</code> <p>The offset of the first device time profiles value to return.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>GetDeviceTemperatureResponse</code> <code>GetDeviceTemperatureResponse</code> <p>response about device temperature info</p> <p>GetDeviceTemperatureResponse</p> Source code in <code>unicboard_billing_sdk/billing_api_sdk.py</code> <pre><code>def get_device_temperature(\n    self,\n    device_id: UUID,\n    limit: Optional[int] = None,\n    offset: Optional[int] = None,\n) -&gt; GetDeviceTemperatureResponse:\n    \"\"\"\n    It gets the temperature info of device\n\n    Args:\n      device_id (UUID): The UUID of the device you want to get information about.\n      limit (Optional[int]): The maximum number of devices time profiles value to return.\n      offset (Optional[int]): The offset of the first device time profiles value to return.\n\n    Returns:\n      GetDeviceTemperatureResponse: response about device temperature info\n    [GetDeviceTemperatureResponse](GetDeviceTemperatureResponse.md)\n    \"\"\"\n    auth_header = {'Authorization': f'Bearer {self._api_token}'}\n    query_params: Dict[str, Any] = {}\n\n    if limit is not None:\n        query_params['limit'] = limit\n    if offset is not None:\n        query_params['offset'] = offset\n\n    response = requests.get(\n        f'{self._api_billing_url}/'\n        f'api/v1/devices/{str(device_id)}/temperatures',\n        params=query_params,\n        headers=auth_header,\n    )\n    response.raise_for_status()\n    return get_device_temperature_structure(response.json())\n</code></pre>"},{"location":"billing_api_sdk/#unicboard_billing_sdk.billing_api_sdk.BillingApiSdk.get_device_uptime","title":"<code>get_device_uptime(device_id, limit=None, offset=None)</code>","text":"<p>It gets the temperature info of device</p> <p>Parameters:</p> Name Type Description Default <code>device_id</code> <code>UUID</code> <p>The UUID of the device you want to get information about.</p> required <code>limit</code> <code>Optional[int]</code> <p>The maximum number of devices time profiles value to return.</p> <code>None</code> <code>offset</code> <code>Optional[int]</code> <p>The offset of the first device time profiles value to return.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>GetDeviceTemperatureResponse</code> <code>GetDeviceUptimeResponse</code> <p>response about device temperature info</p> <p>GetDeviceTemperatureResponse</p> Source code in <code>unicboard_billing_sdk/billing_api_sdk.py</code> <pre><code>def get_device_uptime(\n    self,\n    device_id: UUID,\n    limit: Optional[int] = None,\n    offset: Optional[int] = None,\n) -&gt; GetDeviceUptimeResponse:\n    \"\"\"\n    It gets the temperature info of device\n\n    Args:\n      device_id (UUID): The UUID of the device you want to get information about.\n      limit (Optional[int]): The maximum number of devices time profiles value to return.\n      offset (Optional[int]): The offset of the first device time profiles value to return.\n\n    Returns:\n      GetDeviceTemperatureResponse: response about device temperature info\n    [GetDeviceTemperatureResponse](GetDeviceTemperatureResponse.md)\n    \"\"\"\n    auth_header = {'Authorization': f'Bearer {self._api_token}'}\n    query_params: Dict[str, Any] = {}\n\n    if limit is not None:\n        query_params['limit'] = limit\n    if offset is not None:\n        query_params['offset'] = offset\n\n    response = requests.get(\n        f'{self._api_billing_url}/'\n        f'api/v1/devices/{str(device_id)}/uptimes',\n        params=query_params,\n        headers=auth_header,\n    )\n    response.raise_for_status()\n    return get_device_temperature_structure(response.json())\n</code></pre>"},{"location":"billing_api_sdk/#unicboard_billing_sdk.billing_api_sdk.BillingApiSdk.get_device_value","title":"<code>get_device_value(devices_id, period_from, iteration_interval=IntervalSelectValue.day, period_to=None, end_of_day=True)</code>","text":"<p>It gets the value of a device</p> <p>Parameters:</p> Name Type Description Default <code>devices_id</code> <code>List[UUID]</code> <p>List[UUID] - list of device IDs</p> required <code>period_from</code> <code>datetime</code> <p>The start of the period for which you want to get the data.</p> required <code>period_to</code> <code>datetime</code> <p>datetime = None</p> <code>None</code> <code>iteration_interval</code> <code>IntervalSelectValue</code> <p>= IntervalSelectValue.day  iteration interval</p> <code>day</code> <code>end_of_day</code> <code>bool</code> <p>= True Show values of the end of day</p> <code>True</code> <p>Returns:</p> Name Type Description <code>GetDeviceValueResponse</code> <code>GetDeviceValueResponse</code> <p>response about device value</p> <p>GetDeviceValueResponse</p> Source code in <code>unicboard_billing_sdk/billing_api_sdk.py</code> <pre><code>def get_device_value(\n        self,\n        devices_id: List[UUID],\n        period_from: datetime,\n        iteration_interval: IntervalSelectValue = IntervalSelectValue.day,\n        period_to: datetime = None,\n        end_of_day: bool = True,\n) -&gt; GetDeviceValueResponse:\n    \"\"\"\n    It gets the value of a device\n\n    Args:\n      devices_id (List[UUID]): List[UUID] - list of device IDs\n      period_from (datetime): The start of the period for which you want to get the data.\n      period_to (datetime): datetime = None\n      iteration_interval (IntervalSelectValue): = IntervalSelectValue.day  iteration interval\n      end_of_day (bool): = True Show values of the end of day\n\n    Returns:\n      GetDeviceValueResponse: response about device value\n    [GetDeviceValueResponse](GetDeviceValueResponse.md)\n    \"\"\"\n    auth_header = {'Authorization': f'Bearer {self._api_token}'}\n    query_params: Dict[str, Any] = {\n        \"period_from\": period_from,\n        \"period_to\": period_to,\n        \"end_of_day\": end_of_day,\n        \"iteration_interval\": iteration_interval.value,\n    }\n    devices_id = [str(device_id) for device_id in devices_id]\n\n    response = requests.post(\n        f'{self._api_billing_url}/'\n        f'api/v1/devices/values',\n        params=query_params,\n        headers=auth_header,\n        json={\"devices_id\": devices_id},\n    )\n    response.raise_for_status()\n    return get_device_value_structure(response.json())\n</code></pre>"},{"location":"response_models/","title":"Response models","text":""},{"location":"response_models/#unicboard_billing_sdk.response_models.DataGatewayNetworkResponseModel","title":"<code>DataGatewayNetworkResponseModel</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Gateway</p> <p>Parameters:</p> Name Type Description Default <code>network</code> <p>NetworkResponseModel</p> required <code>protocol</code> <p>ProtokolResponseModel</p> required <code>mac</code> <code>int</code> <p>unique identifier of the device in the network</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class DataGatewayNetworkResponseModel(NamedTuple):\n    \"\"\"\n    Gateway\n\n    Parameters:\n        network: [NetworkResponseModel](NetworkResponseModel.md)\n        protocol: [ProtokolResponseModel](ProtokolResponseModel.md)\n        mac (int): unique identifier of the device in the network\n    \"\"\"\n    network: NetworkResponseModel\n    protocol: ProtokolResponseModel\n    mac: int\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.DataGatewayResponseModel","title":"<code>DataGatewayResponseModel</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Gateway</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>name of input system</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class DataGatewayResponseModel(NamedTuple):\n    \"\"\"\n    Gateway\n\n    Parameters:\n        name (str): name of input system\n    \"\"\"\n    name: str\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.DeviceChannelResponseModel","title":"<code>DeviceChannelResponseModel</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device channel information</p> <p>Parameters:</p> Name Type Description Default <code>inactivity_limit</code> <code>int</code> <p>idle time to create a non-arrival data event (second)</p> required <code>last_date_event_no_data</code> <code>datetime</code> <p>last date of non-arrival event</p> required <code>serial_number</code> <code>int</code> <p>channel serial number (1,2,3,4,5)</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class DeviceChannelResponseModel(NamedTuple):\n    \"\"\"\n    Device channel information\n\n    Parameters:\n        inactivity_limit (int): idle time to create a non-arrival data event (second)\n        last_date_event_no_data (datetime): last date of non-arrival event\n        serial_number (int): channel serial number (1,2,3,4,5)\n    \"\"\"\n    inactivity_limit: int\n    last_date_event_no_data: Optional[datetime]\n    serial_number: int\n    device_meters: List[DeviceMeterResponseModel]\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.DeviceManufacturerResponseModel","title":"<code>DeviceManufacturerResponseModel</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>The manufacturer's name</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>manufacturer's name</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class DeviceManufacturerResponseModel(NamedTuple):\n    \"\"\"\n    The manufacturer's name\n\n    Parameters:\n        name (str): manufacturer's name\n    \"\"\"\n    name: str\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.DeviceMeterResponseModel","title":"<code>DeviceMeterResponseModel</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device meter information</p> <p>Parameters:</p> Name Type Description Default <code>last_value</code> <code>float</code> <p>last counter value (cubic meter(m3))</p> required <code>last_value_date</code> <code>datetime</code> <p>date of last receipt of readings (datetime)</p> required <code>unit_multiplier</code> <code>float</code> <p>recalculates measurements (between database and user)</p> required <code>value_multiplier</code> <code>float</code> <p>recalculates measurements (between meter and database)</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class DeviceMeterResponseModel(NamedTuple):\n    \"\"\"\n    Device meter information\n\n    Parameters:\n        last_value (float): last counter value (cubic meter(m3))\n        last_value_date (datetime): date of last receipt of readings (datetime)\n        unit_multiplier (float): recalculates measurements (between database and user)\n        value_multiplier (float): recalculates measurements (between meter and database)\n    \"\"\"\n    last_value: Optional[float]\n    last_value_date: Optional[datetime]\n    unit_multiplier: float\n    value_multiplier: float\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.DeviceMeteringType","title":"<code>DeviceMeteringType</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Type of measuring system (gas, water)</p> <p>Parameters:</p> Name Type Description Default <code>name_ru</code> <code>str</code> <p>name of the measuring system in Russian/English (for the user)</p> required <code>name_en</code> <code>str</code> <p>name of the measuring system in Russian/English (for the user)</p> required <code>sys_name</code> <code>str</code> <p>name of the measuring system in the system (code)</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class DeviceMeteringType(NamedTuple):\n    \"\"\"\n    Type of measuring system (gas, water)\n\n    Parameters:\n        name_ru (str): name of the measuring system in Russian/English (for the user)\n        name_en (str): name of the measuring system in Russian/English (for the user)\n        sys_name (str): name of the measuring system in the system (code)\n    \"\"\"\n    name_en: str\n    name_ru: str\n    sys_name: str\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.DeviceModificationResponseModel","title":"<code>DeviceModificationResponseModel</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device modification</p> <p>Parameters:</p> Name Type Description Default <code>device_modification_type</code> <p>DeviceModificationTypeResponseModel</p> required <code>name</code> <code>str</code> <p>device modification's name</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class DeviceModificationResponseModel(NamedTuple):\n    \"\"\"\n    Device modification\n\n    Parameters:\n        device_modification_type: [DeviceModificationTypeResponseModel](DeviceModificationTypeResponseModel.md)\n        name (str): device modification's name\n    \"\"\"\n    device_modification_type: DeviceModificationTypeResponseModel\n    name: str\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.DeviceModificationTypeResponseModel","title":"<code>DeviceModificationTypeResponseModel</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device model</p> <p>Parameters:</p> Name Type Description Default <code>device_metering_type</code> <p>DeviceMeteringType</p> required <code>name_ru_en</code> <code>str</code> <p>name of the device model in Russian/English (for the user)</p> required <code>sys_name</code> <code>str</code> <p>name of the device model in the system (code)</p> required <code>type</code> <code>str</code> <p>smart_meter/modem</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class DeviceModificationTypeResponseModel(NamedTuple):\n    \"\"\"\n    Device model\n\n    Parameters:\n        device_metering_type: [DeviceMeteringType](DeviceMeteringType.md)\n        name_ru_en (str): name of the device model in Russian/English (for the user)\n        sys_name (str): name of the device model in the system (code)\n        type (str): smart_meter/modem\n    \"\"\"\n    device_metering_type: DeviceMeteringType\n    name_en: str\n    name_ru: str\n    sys_name: str\n    type: str\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.GetDeviceBatteryLevelResponse","title":"<code>GetDeviceBatteryLevelResponse</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device battery level list</p> <p>Parameters:</p> Name Type Description Default <code>count</code> <code>int</code> <p>object's limit count</p> required <code>errors</code> <code>any</code> <p>presence of errors</p> required <code>ok</code> <code>bool</code> <p>validity</p> required <code>total_count</code> <code>int</code> <p>object's total count</p> required <code>payload</code> <code>list</code> <p>GetDeviceListBatteryLevelPayloadResponse</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class GetDeviceBatteryLevelResponse(NamedTuple):\n    \"\"\"\n    Device battery level list\n\n    Parameters:\n        count (int): object's limit count\n        errors (any): presence of errors\n        ok (bool): validity\n        total_count (int): object's total count\n        payload (list): [GetDeviceListBatteryLevelPayloadResponse](GetDeviceListBatteryLevelPayloadResponse.md)\n    \"\"\"\n    count: int\n    errors: List[Any]\n    ok: bool\n    total_count: int\n    payload: List[GetDeviceListBatteryLevelPayloadResponse]\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.GetDeviceChannelValuePayloadResponse","title":"<code>GetDeviceChannelValuePayloadResponse</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device channel values</p> <p>Parameters:</p> Name Type Description Default <code>channel_number</code> <code>int</code> <p>channel number</p> required <code>date</code> <code>datetime</code> <p>date and time of receipt</p> required <code>date_created</code> <code>datetime</code> <p>date and time the entry was created</p> required <code>device_id</code> <code>UUID</code> <p>unique device identifier in the system</p> required <code>value</code> <code>float</code> <p>product of value_raw and value_multiplier (recalculated values)</p> required <code>value_raw</code> <code>float</code> <p>initial value</p> required <code>value_type</code> <code>str</code> <p>device_data(meter reading), interpolated_linear(interpolated reading)</p> required <code>meter_id</code> <code>str</code> <p>meter identifier</p> required <code>last</code> <code>value Optional(float</code> <p>last value</p> required <code>last_value_date</code> <code>Optional(datetime</code> <p>last value date</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class GetDeviceChannelValuePayloadResponse(NamedTuple):\n    \"\"\"\n    Device channel values\n\n    Parameters:\n        channel_number (int): channel number\n        date (datetime): date and time of receipt\n        date_created (datetime): date and time the entry was created\n        device_id (UUID): unique device identifier in the system\n        value (float): product of value_raw and value_multiplier (recalculated values)\n        value_raw (float): initial value\n        value_type (str): device_data(meter reading), interpolated_linear(interpolated reading)\n        meter_id (str): meter identifier\n        last value Optional(float): last value\n        last_value_date Optional(datetime): last value date\n    \"\"\"\n    channel_number: int\n    date: datetime\n    date_created: datetime\n    device_id: UUID\n    value: Optional[float]\n    value_raw: Optional[float]\n    value_type: str\n    kind: str\n    tariff_number: int\n    journal_data_type: Dict[str, Any]\n    meter_id: UUID\n    last_value: Optional[float]\n    last_value_date: Optional[datetime]\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.GetDeviceClockResponse","title":"<code>GetDeviceClockResponse</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device clock info list</p> <p>Parameters:</p> Name Type Description Default <code>count</code> <code>int</code> <p>object's limit count</p> required <code>errors</code> <code>any</code> <p>presence of errors</p> required <code>ok</code> <code>bool</code> <p>validity</p> required <code>total_count</code> <code>int</code> <p>object's total count</p> required <code>payload</code> <code>list</code> <p>GetDeviceListClockPayloadResponse</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class GetDeviceClockResponse(NamedTuple):\n    \"\"\"\n    Device clock info list\n\n    Parameters:\n        count (int): object's limit count\n        errors (any): presence of errors\n        ok (bool): validity\n        total_count (int): object's total count\n        payload (list): [GetDeviceListClockPayloadResponse](GetDeviceListClockPayloadResponse.md)\n    \"\"\"\n    count: int\n    errors: List[Any]\n    ok: bool\n    total_count: int\n    payload: List[GetDeviceListClockPayloadResponse]\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.GetDeviceEventResponse","title":"<code>GetDeviceEventResponse</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device events list</p> <p>Parameters:</p> Name Type Description Default <code>count</code> <code>int</code> <p>object's limit count</p> required <code>errors</code> <code>any</code> <p>presence of errors</p> required <code>ok</code> <code>bool</code> <p>validity</p> required <code>total_count</code> <code>int</code> <p>object's total count</p> required <code>payload</code> <code>list</code> <p>GetDeviceListEventPayloadResponse</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class GetDeviceEventResponse(NamedTuple):\n    \"\"\"\n    Device events list\n\n    Parameters:\n        count (int): object's limit count\n        errors (any): presence of errors\n        ok (bool): validity\n        total_count (int): object's total count\n        payload (list): [GetDeviceListEventPayloadResponse](GetDeviceListEventPayloadResponse.md)\n    \"\"\"\n    count: int\n    errors: List[Any]\n    ok: bool\n    total_count: int\n    payload: List[GetDeviceListEventPayloadResponse]\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.GetDeviceInfoResponse","title":"<code>GetDeviceInfoResponse</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device information list</p> <p>Parameters:</p> Name Type Description Default <code>errors</code> <code>any</code> <p>presence of errors</p> required <code>ok</code> <code>bool</code> <p>successful request</p> required <code>payload</code> <p>GetDeviceListInfoPayloadResponse</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class GetDeviceInfoResponse(NamedTuple):\n    \"\"\"\n    Device information list\n\n    Parameters:\n        errors (any): presence of errors\n        ok (bool): successful request\n        payload: [GetDeviceListInfoPayloadResponse](GetDeviceListInfoPayloadResponse.md)\n    \"\"\"\n    errors: List[Any]\n    ok: bool\n    payload: GetDeviceListInfoPayloadResponse\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.GetDeviceListBatteryLevelPayloadResponse","title":"<code>GetDeviceListBatteryLevelPayloadResponse</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device battery level values</p> <p>Parameters:</p> Name Type Description Default <code>device_id</code> <code>UUID</code> <p>device system identifier</p> required <code>battery_id</code> <code>UUID</code> <p>identifier of device battery</p> required <code>date</code> <code>datetime</code> <p>date of value</p> required <code>value</code> <code>float</code> <p>value of battery level</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class GetDeviceListBatteryLevelPayloadResponse(NamedTuple):\n    \"\"\"\n    Device battery level values\n\n    Parameters:\n        device_id (UUID): device system identifier\n        battery_id (UUID): identifier of device battery\n        date (datetime): date of value\n        value (float): value of battery level\n    \"\"\"\n    device_id: UUID\n    battery_id: int\n    date: datetime\n    value: Optional[float]\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.GetDeviceListClockPayloadResponse","title":"<code>GetDeviceListClockPayloadResponse</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device clock info</p> <p>Parameters:</p> Name Type Description Default <code>device_id</code> <code>UUID</code> <p>device system identifier</p> required <code>clock_id</code> <code>int</code> <p>device clock identifier</p> required <code>device_clock</code> <code>datetime</code> <p>time on the device linked to a specific device clock</p> required <code>date</code> <code>datetime</code> <p>date of receipt data</p> required <code>device_tz</code> <code>str</code> <p>device time zone</p> required <code>tz_offset_s</code> <code>int</code> <p>difference between server and device timezone</p> required <code>out_of_sync_s</code> <code>float</code> <p>time difference of the clock in seconds from the current time</p> required <code>out_of_sync_type</code> <code>str</code> <p>discrepancy type: 'synced' - less than 5 seconds 'out_of_sync_warning' - less than 10 seconds 'out_of_sync_critical' - less than or equal to 15 seconds 'unsynchronized' - more than 15 seconds</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class GetDeviceListClockPayloadResponse(NamedTuple):\n    \"\"\"\n    Device clock info\n\n    Parameters:\n        device_id (UUID): device system identifier\n        clock_id (int): device clock identifier\n        device_clock (datetime): time on the device linked to a specific device clock\n        date (datetime): date of receipt data\n        device_tz (str): device time zone\n        tz_offset_s (int): difference between server and device timezone\n        out_of_sync_s (float): time difference of the clock in seconds from the current time\n        out_of_sync_type (str): discrepancy type:\n            'synced' - less than 5 seconds\n            'out_of_sync_warning' - less than 10 seconds\n            'out_of_sync_critical' - less than or equal to 15 seconds\n            'unsynchronized' - more than 15 seconds\n    \"\"\"\n    device_id: UUID\n    clock_id: int\n    device_clock: datetime\n    date: datetime\n    device_tz: str\n    tz_offset_s: int\n    out_of_sync_s: float\n    out_of_sync_type: str\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.GetDeviceListEventPayloadResponse","title":"<code>GetDeviceListEventPayloadResponse</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device events</p> <p>Parameters:</p> Name Type Description Default <code>device_id</code> <code>UUID</code> <p>device system identifier</p> required <code>type</code> <code>str</code> <p>type of event</p> required <code>date</code> <code>datetime</code> <p>date of event</p> required <code>value</code> <code>float</code> <p>value of event</p> required <code>data</code> <code>json</code> <p>additional data of event</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class GetDeviceListEventPayloadResponse(NamedTuple):\n    \"\"\"\n    Device events\n\n    Parameters:\n        device_id (UUID): device system identifier\n        type (str): type of event\n        date (datetime): date of event\n        value (float): value of event\n        data (json): additional data of event\n    \"\"\"\n    device_id: UUID\n    type: str\n    date: datetime\n    value: Optional[float]\n    data: Optional[Dict[str, Any]]\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.GetDeviceListInfoPayloadResponse","title":"<code>GetDeviceListInfoPayloadResponse</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device information</p> <p>Parameters:</p> Name Type Description Default <code>data_gateway_network_device</code> <p>DataGatewayNetworkResponseModel</p> required <code>device_channel</code> <code>list</code> <p>DeviceChannelResponseModel</p> required <code>device_manufacturer</code> <p>DeviceManufacturerResponseModel</p> required <code>device_modification</code> <p>DeviceModificationResponseModel</p> required <code>date_produced</code> <code>datetime</code> <p>date of manufacture of the device</p> required <code>firmware_version</code> <code>str</code> <p>software version</p> required <code>hardware_version</code> <code>str</code> <p>hardware version</p> required <code>id</code> <code>UUID</code> <p>system identifier</p> required <code>manufacturer_serial_number</code> <code>str</code> <p>manufacturer-serial number</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class GetDeviceListInfoPayloadResponse(NamedTuple):\n    \"\"\"\n    Device information\n\n    Parameters:\n        data_gateway_network_device: [DataGatewayNetworkResponseModel](DataGatewayNetworkResponseModel.md)\n        device_channel (list): [DeviceChannelResponseModel](DeviceChannelResponseModel.md)\n        device_manufacturer: [DeviceManufacturerResponseModel](DeviceManufacturerResponseModel.md)\n        device_modification: [DeviceModificationResponseModel](DeviceModificationResponseModel.md)\n        date_produced (datetime): date of manufacture of the device\n        firmware_version (str): software version\n        hardware_version (str): hardware version\n        id (UUID): system identifier\n        manufacturer_serial_number (str): manufacturer-serial number\n    \"\"\"\n    data_gateway_network_device: DataGatewayNetworkResponseModel\n    device_channel: List[DeviceChannelResponseModel]\n    device_manufacturer: DeviceManufacturerResponseModel\n    device_modification: DeviceModificationResponseModel\n    date_produced: Optional[datetime]\n    firmware_version: Optional[str]\n    hardware_version: Optional[str]\n    id: UUID\n    manufacturer_serial_number: str\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.GetDeviceListInfoResponse","title":"<code>GetDeviceListInfoResponse</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device information list</p> <p>Parameters:</p> Name Type Description Default <code>count</code> <code>int</code> <p>object's limit count</p> required <code>errors</code> <code>any</code> <p>presence of errors</p> required <code>ok</code> <code>bool</code> <p>validity</p> required <code>total_count</code> <code>int</code> <p>object's total count</p> required <code>payload</code> <code>list</code> <p>GetDeviceListInfoPayloadResponse</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class GetDeviceListInfoResponse(NamedTuple):\n    \"\"\"\n    Device information list\n\n    Parameters:\n        count (int): object's limit count\n        errors (any): presence of errors\n        ok (bool): validity\n        total_count (int): object's total count\n        payload (list): [GetDeviceListInfoPayloadResponse](GetDeviceListInfoPayloadResponse.md)\n    \"\"\"\n    count: int\n    errors: List[Any]\n    ok: bool\n    total_count: int\n    payload: List[GetDeviceListInfoPayloadResponse]\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.GetDeviceListProfilePayloadResponse","title":"<code>GetDeviceListProfilePayloadResponse</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device events</p> <p>Parameters:</p> Name Type Description Default <code>device_id</code> <code>UUID</code> <p>device system identifier</p> required <code>date_start</code> <code>datetime</code> <p>date and time profile start</p> required <code>date_end</code> <code>str</code> <p>date and time profile end</p> required <code>profile_kind</code> <code>float</code> <p>kind of profile</p> required <code>granularity_s</code> <p>the time for which each value in field \"values\" is responsible, from 1 second to 60 minutes</p> required <code>values_count</code> <code>int</code> <p>count values in field \"values\" (date_start - date_end = granularity_s * values_count)</p> required <code>values</code> <code>list of floats</code> <p>list of profile values</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class GetDeviceListProfilePayloadResponse(NamedTuple):\n    \"\"\"\n    Device events\n\n    Parameters:\n        device_id (UUID): device system identifier\n        date_start (datetime): date and time profile start\n        date_end (str): date and time profile end\n        profile_kind (float): kind of profile\n        granularity_s: the time for which each value in field \"values\" is responsible, from 1 second to 60 minutes\n        values_count (int): count values in field \"values\" (date_start - date_end = granularity_s * values_count)\n        values (list of floats): list of profile values\n    \"\"\"\n    device_id: UUID\n    date_start: datetime\n    date_end: datetime\n    profile_kind: str\n    granularity_s: str\n    values_count: int\n    values: List[float]\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.GetDeviceListTemperaturePayloadResponse","title":"<code>GetDeviceListTemperaturePayloadResponse</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device temperature values</p> <p>Parameters:</p> Name Type Description Default <code>device_id</code> <code>UUID</code> <p>device system identifier</p> required <code>date</code> <code>datetime</code> <p>date of value</p> required <code>value</code> <code>float</code> <p>value of temperature</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class GetDeviceListTemperaturePayloadResponse(NamedTuple):\n    \"\"\"\n    Device temperature values\n\n    Parameters:\n        device_id (UUID): device system identifier\n        date (datetime): date of value\n        value (float): value of temperature\n    \"\"\"\n    device_id: UUID\n    date: datetime\n    value: Optional[float]\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.GetDeviceListUptimePayloadResponse","title":"<code>GetDeviceListUptimePayloadResponse</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device temperature values</p> <p>Parameters:</p> Name Type Description Default <code>device_id</code> <code>UUID</code> <p>device system identifier</p> required <code>channel_id</code> <code>UUID</code> <p>device channel system identifier</p> required <code>channel_serial_number</code> <code>int</code> <p>channel serial number (1,2,3,4,5)</p> required <code>date</code> <code>datetime</code> <p>value of date</p> required <code>value</code> <code>float</code> <p>value of uptime</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class GetDeviceListUptimePayloadResponse(NamedTuple):\n    \"\"\"\n    Device temperature values\n\n    Parameters:\n        device_id (UUID): device system identifier\n        channel_id (UUID): device channel system identifier\n        channel_serial_number (int): channel serial number (1,2,3,4,5)\n        date (datetime): value of date\n        value (float): value of uptime\n    \"\"\"\n    device_id: UUID\n    channel_id: UUID\n    channel_serial_number: int\n    date: datetime\n    uptime_s: float\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.GetDeviceProfileResponse","title":"<code>GetDeviceProfileResponse</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device profile list</p> <p>Parameters:</p> Name Type Description Default <code>count</code> <code>int</code> <p>object's limit count</p> required <code>errors</code> <code>any</code> <p>presence of errors</p> required <code>ok</code> <code>bool</code> <p>validity</p> required <code>total_count</code> <code>int</code> <p>object's total count</p> required <code>payload</code> <code>list</code> <p>GetDeviceProfileResponse</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class GetDeviceProfileResponse(NamedTuple):\n    \"\"\"\n    Device profile list\n\n    Parameters:\n        count (int): object's limit count\n        errors (any): presence of errors\n        ok (bool): validity\n        total_count (int): object's total count\n        payload (list): [GetDeviceProfileResponse](GetDeviceProfileResponse.md)\n    \"\"\"\n    count: int\n    errors: List[Any]\n    ok: bool\n    total_count: int\n    payload: List[GetDeviceListProfilePayloadResponse]\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.GetDeviceTemperatureResponse","title":"<code>GetDeviceTemperatureResponse</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device temperature info list</p> <p>Parameters:</p> Name Type Description Default <code>count</code> <code>int</code> <p>object's limit count</p> required <code>errors</code> <code>any</code> <p>presence of errors</p> required <code>ok</code> <code>bool</code> <p>validity</p> required <code>total_count</code> <code>int</code> <p>object's total count</p> required <code>payload</code> <code>list</code> <p>GetDeviceListTemperaturePayloadResponse</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class GetDeviceTemperatureResponse(NamedTuple):\n    \"\"\"\n    Device temperature info list\n\n    Parameters:\n        count (int): object's limit count\n        errors (any): presence of errors\n        ok (bool): validity\n        total_count (int): object's total count\n        payload (list): [GetDeviceListTemperaturePayloadResponse](GetDeviceListTemperaturePayloadResponse.md)\n    \"\"\"\n    count: int\n    errors: List[Any]\n    ok: bool\n    total_count: int\n    payload: List[GetDeviceListTemperaturePayloadResponse]\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.GetDeviceUptimeResponse","title":"<code>GetDeviceUptimeResponse</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device temperature info list</p> <p>Parameters:</p> Name Type Description Default <code>count</code> <code>int</code> <p>object's limit count</p> required <code>errors</code> <code>any</code> <p>presence of errors</p> required <code>ok</code> <code>bool</code> <p>validity</p> required <code>total_count</code> <code>int</code> <p>object's total count</p> required <code>payload</code> <code>list</code> <p>GetDeviceListUptimePayloadResponse</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class GetDeviceUptimeResponse(NamedTuple):\n    \"\"\"\n    Device temperature info list\n\n    Parameters:\n        count (int): object's limit count\n        errors (any): presence of errors\n        ok (bool): validity\n        total_count (int): object's total count\n        payload (list): [GetDeviceListUptimePayloadResponse](GetDeviceListUptimePayloadResponse.md)\n    \"\"\"\n    count: int\n    errors: List[Any]\n    ok: bool\n    total_count: int\n    payload: List[GetDeviceListUptimePayloadResponse]\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.GetDeviceValueResponse","title":"<code>GetDeviceValueResponse</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Device channel information list</p> <p>Parameters:</p> Name Type Description Default <code>count</code> <code>int</code> <p>object's limit count</p> required <code>errors</code> <code>any</code> <p>presence of errors</p> required <code>ok</code> <code>bool</code> <p>validity</p> required <code>total_count</code> <code>int</code> <p>object's total count</p> required <code>payload</code> <code>list</code> <p>GetDeviceChannelValuePayloadResponse</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class GetDeviceValueResponse(NamedTuple):\n    \"\"\"\n    Device channel information list\n\n   Parameters:\n        count (int): object's limit count\n        errors (any): presence of errors\n        ok (bool): validity\n        total_count (int): object's total count\n        payload (list): [GetDeviceChannelValuePayloadResponse](GetDeviceChannelValuePayloadResponse.md)\n    \"\"\"\n    count: int\n    errors: List[Any]\n    ok: bool\n    total_count: int\n    payload: List[GetDeviceChannelValuePayloadResponse]\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.NetworkResponseModel","title":"<code>NetworkResponseModel</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Internal network</p> <p>Parameters:</p> Name Type Description Default <code>data_gateway</code> <p>DataGatewayResponseModel</p> required <code>name</code> <code>str</code> <p>network's name</p> required <code>type_network</code> <code>str</code> <p>type of network, can be output or input</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class NetworkResponseModel(NamedTuple):\n    \"\"\"\n    Internal network\n\n    Parameters:\n        data_gateway: [DataGatewayResponseModel](DataGatewayResponseModel.md)\n        name (str): network's name\n        type_network (str): type of network, can be output or input\n    \"\"\"\n    data_gateway: DataGatewayResponseModel\n    name: str\n    type_network: str\n</code></pre>"},{"location":"response_models/#unicboard_billing_sdk.response_models.ProtokolResponseModel","title":"<code>ProtokolResponseModel</code>","text":"<p>             Bases: <code>NamedTuple</code></p> <p>Protocol's name</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>protocol's name</p> required Source code in <code>unicboard_billing_sdk/response_models.py</code> <pre><code>class ProtokolResponseModel(NamedTuple):\n    \"\"\"\n    Protocol's name\n\n    Parameters:\n        name (str): protocol's name\n    \"\"\"\n    name: str\n</code></pre>"}]}